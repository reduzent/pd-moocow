/* -*- Mode: C -*-
 *
 * File: gfsmdraw_cmdparser.h
 * Description: Headers for command-line parser struct gengetopt_args_info.
 *
 * File autogenerated by optgen.perl version 0.05.
 *
 */

#ifndef gfsmdraw_cmdparser_h
#define gfsmdraw_cmdparser_h

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * moocow: Never set PACKAGE and VERSION here.
 */

struct gengetopt_args_info {
  char * ilabels_arg;	 /* Specify input (lower) labels file. (default=NULL). */
  char * olabels_arg;	 /* Specify output (upper) labels file. (default=NULL). */
  char * slabels_arg;	 /* Specify state labels file. (default=NULL). */
  char * title_arg;	 /* Specify output title. (default=NULL). */
  int vertical_flag;	 /* Draw vertically. (default=0). */
  char * output_arg;	 /* Output graph specification. (default=NULL). */
  int dot_flag;	 /* Request dot output (default) (default=0). */
  float width_arg;	 /* Specify output width (default=bbox). (default=8.5). */
  float height_arg;	 /* Specify output height (default=bbox). (default=11). */
  int fontsize_arg;	 /* Set output font size. (default=14). */
  char * font_arg;	 /* Set output font name. (default=NULL). */
  float nodesep_arg;	 /* Set min node separation. (default=0.25). */
  float ranksep_arg;	 /* Set min rank separation. (default=0.40). */
  int portrait_flag;	 /* Generate in portrait mode. (default=0). */
  int vcg_flag;	 /* Request VCG output. (default=0). */
  int xspace_arg;	 /* Set xspace graph parameter. (default=40). */
  int yspace_arg;	 /* Set yspace graph parameter. (default=20). */
  char * state_shape_arg;	 /* Set shape for state nodes. (default=box). */
  char * state_color_arg;	 /* Set default state color. (default=white). */
  char * final_color_arg;	 /* Set color for final states. (default=lightgrey). */

  int help_given;	 /* Whether help was given */
  int version_given;	 /* Whether version was given */
  int ilabels_given;	 /* Whether ilabels was given */
  int olabels_given;	 /* Whether olabels was given */
  int slabels_given;	 /* Whether slabels was given */
  int title_given;	 /* Whether title was given */
  int vertical_given;	 /* Whether vertical was given */
  int output_given;	 /* Whether output was given */
  int dot_given;	 /* Whether dot was given */
  int width_given;	 /* Whether width was given */
  int height_given;	 /* Whether height was given */
  int fontsize_given;	 /* Whether fontsize was given */
  int font_given;	 /* Whether font was given */
  int nodesep_given;	 /* Whether nodesep was given */
  int ranksep_given;	 /* Whether ranksep was given */
  int portrait_given;	 /* Whether portrait was given */
  int vcg_given;	 /* Whether vcg was given */
  int xspace_given;	 /* Whether xspace was given */
  int yspace_given;	 /* Whether yspace was given */
  int state_shape_given;	 /* Whether state-shape was given */
  int state_color_given;	 /* Whether state-color was given */
  int final_color_given;	 /* Whether final-color was given */
  
  char **inputs;         /* unnamed arguments */
  unsigned inputs_num;   /* number of unnamed arguments */
};

/* read rc files (if any) and parse all command-line options in one swell foop */
int  cmdline_parser (int argc, char *const *argv, struct gengetopt_args_info *args_info);

/* instantiate defaults from environment variables: you must call this yourself! */
void cmdline_parser_envdefaults (struct gengetopt_args_info *args_info);

/* read a single rc-file */
void cmdline_parser_read_rcfile (const char *filename,
				    struct gengetopt_args_info *args_info,
				    int user_specified);

/* read a single rc-file (stream) */
void cmdline_parser_read_rc_stream (FILE *rcfile,
				       const char *filename,
				       struct gengetopt_args_info *args_info);

/* parse a single option */
int cmdline_parser_parse_option (char oshort, const char *olong, const char *val,
				    struct gengetopt_args_info *args_info);

/* print help message */
void cmdline_parser_print_help(void);

/* print version */
void cmdline_parser_print_version(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* gfsmdraw_cmdparser_h */
